<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Colors -->
    <Color x:Key="WindowBackgroundColor">#FF23272E</Color>
    <Color x:Key="ControlBackgroundColor">#FF2C313A</Color>
    <Color x:Key="ControlBorderColor">#FF3A3F4B</Color>
    <Color x:Key="PrimaryTextColor">#FFF8F8F2</Color>
    <Color x:Key="SecondaryTextColor">#FFB0B0B0</Color>
    <Color x:Key="AccentColor">#FF61AFEF</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource ControlBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{StaticResource ControlBorderColor}"/>
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>

  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                   Color="CadetBlue"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                   Color="CadetBlue"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                   Color="CadetBlue"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                   Color="CadetBlue"/>
  
  <!-- Window background -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>
  
    <!-- Button style -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FF528CCB"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FF3A3F4B"/>
                <Setter Property="Foreground" Value="#FF666666"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox style -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CaretBrush" Value="{DynamicResource AccentBrush}"/>
    </Style>

    <!-- Label style -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <!-- ComboBox style -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="6,2,6,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="1"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}">
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="{DynamicResource PrimaryTextBrush}"/>
                        </ToggleButton>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="200"
                                  Background="{DynamicResource ControlBackgroundBrush}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ControlBackgroundBrush}"
                                        BorderBrush="{DynamicResource ControlBorderBrush}"
                                        BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF666666"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF353A42"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBox style -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!-- ScrollBar style (minimal) -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
    </Style>

    <!-- TabControl -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ControlBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4,4,0,0"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                            x:Name="ContentSite"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF353A42"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToolBar -->
    <Style TargetType="ToolBar">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground"  Value="CadetBlue"/>
  </Style>

    <!-- TextBlock style -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <!-- Menu bar style -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>
  <Style x:Key="MenuBarItemStyle" TargetType="{x:Type MenuItem}">
    <!-- basic look -->
    <Setter Property="Background"       Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="Foreground"       Value="{DynamicResource ControlForeground}"/>
    <Setter Property="Padding"          Value="10,4"/>
    <Setter Property="Margin"           Value="2,0"/>
    <Setter Property="BorderThickness"  Value="0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>

    <!-- single template, no swapping -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Grid>
            <!-- visible “button” -->
            <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
              <ContentPresenter ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
            </Border>

            <!-- popup for children -->
            <Popup x:Name="PART_Popup"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
              <Border Background="{DynamicResource ControlBackgroundBrush}"
                                BorderBrush="{DynamicResource AccentBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                <StackPanel IsItemsHost="True"
                                        Background="{DynamicResource ControlBackgroundBrush}"/>
              </Border>
            </Popup>
          </Grid>

          <!-- colour triggers -->
          <ControlTemplate.Triggers>
            <!-- hover -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Background"
                                Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <!-- submenu open -->
            <Trigger Property="IsSubmenuOpen" Value="True">
              <Setter TargetName="Bd" Property="Background"
                                Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <!-- disabled -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#FF666666"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- Dropdown menu item style -->
  <Style TargetType="MenuItem" x:Key="DropdownMenuItemStyle"
       BasedOn="{StaticResource {x:Type MenuItem}}">
    <Setter Property="Background"      Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="Foreground"      Value="{DynamicResource ControlForeground}"/>

    <Setter Property="BorderBrush"     Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>

    <Setter Property="Padding"         Value="8,4"/>

    <Style.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- dark popup / drop-down chrome -->
  <Style x:Key="DarkContextMenu"
       TargetType="{x:Type ContextMenu}">
    <!-- use your existing theme brushes -->
    <Setter Property="Background"
            Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource AccentBrush}" />
    <!-- customise border thickness here -->
    <Setter Property="BorderThickness" Value="2" />

    <!-- remove the default Aero/Fluent template -->
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
            <!-- the menu items themselves -->
            <StackPanel IsItemsHost="True"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- popup chrome -->
  <Style TargetType="ContextMenu">
    <Setter Property="Background"
              Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="BorderBrush"
              Value="{DynamicResource AccentBrush}" />
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContextMenu">
          <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel IsItemsHost="True"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TreeView style -->
  <Style TargetType="TreeView" x:Key="DarkTreeView">
    <Setter Property="Background" Value="#FF353A42"/>
    <Setter Property="Foreground" Value="#FF353A42"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>

  <!-- TreeViewItem style -->
    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="CadetBlue"/>
        <Setter Property="Background" Value="#FF353A42"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="CadetBlue"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF666666"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF666666"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary> 